[{"content":"Here I\u0026rsquo;m going to show you how to push all the content of a folder from the main branch to another branch called gh-pages.\nUsefull for deploying specific files and not the whole project on github pages.\nCommands These commands are all run from the main branch.\n1. Add\ngit add . 2. Commit\ngit commit -m \u0026#34;commit message\u0026#34; 3. Subtree\ngit subtree push -P public origin gh-pages  -P (prefix) flag is the folders content that will be pushed, in this case the public. origin will be the main branch where the public folder is. gh-pages is the branch where the public folders contents will be pushed to.  Basically this will push everything inside the public folder from the main branch (origin) to the gh-pages branch.\n","permalink":"https://skillsboy.github.io/blog/posts/push-folders-content-to-another-git-branch/","summary":"Here I\u0026rsquo;m going to show you how to push all the content of a folder from the main branch to another branch called gh-pages.\nUsefull for deploying specific files and not the whole project on github pages.\nCommands These commands are all run from the main branch.\n1. Add\ngit add . 2. Commit\ngit commit -m \u0026#34;commit message\u0026#34; 3. Subtree\ngit subtree push -P public origin gh-pages  -P (prefix) flag is the folders content that will be pushed, in this case the public.","title":"Push Folders Content to Another Git Branch"},{"content":"This tutorial is going to show you how to build a Website with Hugo.\nGreat for a Personal Portfolio or a Blog.\nRequirements  Hugo  Create a new hugo site 1. New site\nhugo new site websiteName -f \u0026#34;yaml\u0026#34;  websiteName is the name of the site that is going to be created. -f flag is so instead of the default toml we use yaml for our config and for the markdown front matter.  This will create a folder called websiteName with the following structure.\n â”œâ”€â”€ archetypes\nâ”œâ”€â”€ config.yaml\nâ”œâ”€â”€ content\nâ”œâ”€â”€ data\nâ”œâ”€â”€ layouts\nâ”œâ”€â”€ static\nâ””â”€â”€ themes\n Add a theme 1. Change directory\ncd websiteName cd themes 2. Download theme\n~websiteName/themes/ %\ngit clone https://github.com/adityatelange/hugo-PaperMod.git A hugo-PaperMod folder will be created inside the themes, themes can be found here.\n3. Now we have to activate it. To do that go back to the projects root.\n~websiteName/themes/ %\ncd .. 4. Activate\nOpen config.yaml.\nAdd:\ntheme: hugo-PaperMod Test local site 1. Test\n~websiteName/ %\nhugo server -D  -D flag will include all posts marked as draft: true in there front matter.  This will create a live server.\n2. Navigate with your browser to the given url.\nBuild static files for production 1. Add baseURL\nOpen config.yaml.\nChange:\nbaseURL: https://yourDomain.com Add your domain, this has to be done because when hugo generates the static files it may use absolute paths.\n2. Build static files\n~websiteName/ %\nhugo This will create a folder called public in the projects root, where all the static files will to be generated.\n3. Copy /public/*\nNow just copy those files, from inside the public folder, to your webserver and you will be able to see the default page from the chosen theme.\nHave fun ðŸ˜„\n","permalink":"https://skillsboy.github.io/blog/posts/build-a-website-with-hugo/","summary":"This tutorial is going to show you how to build a Website with Hugo.\nGreat for a Personal Portfolio or a Blog.\nRequirements  Hugo  Create a new hugo site 1. New site\nhugo new site websiteName -f \u0026#34;yaml\u0026#34;  websiteName is the name of the site that is going to be created. -f flag is so instead of the default toml we use yaml for our config and for the markdown front matter.","title":"Build a Website With Hugo"},{"content":"This is my first post.\n","permalink":"https://skillsboy.github.io/blog/posts/first-post/","summary":"This is my first post.","title":"First Post"}]